<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:vm="clr-namespace:Solvix.Client.MVVM.ViewModels"
             xmlns:model="clr-namespace:Solvix.Client.Core.Models"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:converters="clr-namespace:Solvix.Client.Core.Converters"
             x:Class="Solvix.Client.MVVM.Views.ChatPage"
             x:DataType="vm:ChatPageViewModel"
             BackgroundColor="{DynamicResource PageBackgroundColor}"
             Shell.NavBarIsVisible="False">

    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:IsOwnMessageToAlignmentConverter x:Key="MessageAlignmentConverter"/>
            <converters:MessageStatusToIconConverter x:Key="StatusIconConverter"/>
            <converters:MessageStatusToOpacityConverter x:Key="StatusOpacityConverter"/>
            <converters:TextDirectionConverter x:Key="TextDirectionConverter"/>
            <toolkit:IntToBoolConverter x:Key="IntToBoolConverter"/>
            <toolkit:InvertedBoolConverter x:Key="InverseBoolConverter" />
            <converters:BoolToColorConverter x:Key="StatusColorConverter"/>

            <!-- Message Bubble Colors -->
            <Color x:Key="SentMessageBubbleColor">#DCF8C6</Color>
            <Color x:Key="ReceivedMessageBubbleColor">White</Color>
            <Color x:Key="SentMessageTextColor">#222222</Color>
            <Color x:Key="ReceivedMessageTextColor">#222222</Color>

            <!-- Useful Styles -->
            <Style x:Key="ChatInputBorderStyle" TargetType="Border">
                <Setter Property="Stroke" Value="{DynamicResource FrameBorderColor}"/>
                <Setter Property="StrokeThickness" Value="1"/>
                <Setter Property="Padding" Value="5,5,8,5"/>
                <Setter Property="BackgroundColor" Value="{DynamicResource CardBackgroundColor}"/>
                <Setter Property="StrokeShape">
                    <RoundRectangle CornerRadius="25"/>
                </Setter>
            </Style>
            <Style x:Key="ChatInputEditorStyle" TargetType="Editor">
                <Setter Property="Placeholder" Value="پیام"/>
                <Setter Property="AutoSize" Value="TextChanges"/>
                <Setter Property="MaximumHeightRequest" Value="100"/>
                <Setter Property="VerticalOptions" Value="Center"/>
                <Setter Property="BackgroundColor" Value="Transparent"/>
                <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}"/>
                <Setter Property="PlaceholderColor" Value="{DynamicResource TertiaryTextColor}"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="Margin" Value="5,0"/>
            </Style>
            <Style x:Key="ChatInputButtonStyle" TargetType="Button">
                <Setter Property="WidthRequest" Value="48"/>
                <Setter Property="HeightRequest" Value="48"/>
                <Setter Property="CornerRadius" Value="24"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="BackgroundColor" Value="Transparent"/>
                <Setter Property="TextColor" Value="{DynamicResource SecondaryTextColor}"/>
                <Setter Property="FontFamily" Value="MaterialIcons"/>
                <Setter Property="FontSize" Value="26"/>
                <Setter Property="VerticalOptions" Value="End"/>
            </Style>
            <Style x:Key="SendButtonStyle" BasedOn="{StaticResource ChatInputButtonStyle}" TargetType="Button">
                <Setter Property="BackgroundColor" Value="{DynamicResource PrimaryColor}"/>
                <Setter Property="TextColor" Value="{DynamicResource InverseTextColor}"/>
            </Style>

            <!-- Header Styles -->
            <Style x:Key="ChatHeaderStyle" TargetType="Grid">
                <Setter Property="BackgroundColor" Value="{DynamicResource CardBackgroundColor}"/>
                <Setter Property="Padding" Value="8,10"/>
                <Setter Property="ColumnSpacing" Value="8"/>
                <Setter Property="HeightRequest" Value="60"/>
                <Setter Property="Margin" Value="0"/>
            </Style>
            <Style x:Key="ProfileCircleStyle" TargetType="Border">
                <Setter Property="WidthRequest" Value="40"/>
                <Setter Property="HeightRequest" Value="40"/>
                <Setter Property="BackgroundColor" Value="{DynamicResource TertiaryColor}"/>
                <Setter Property="StrokeShape">
                    <RoundRectangle CornerRadius="20"/>
                </Setter>
                <Setter Property="HorizontalOptions" Value="Center"/>
                <Setter Property="VerticalOptions" Value="Center"/>
            </Style>
            <Style x:Key="InitialsLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="{DynamicResource InverseTextColor}"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontAttributes" Value="Bold"/>
                <Setter Property="HorizontalOptions" Value="Center"/>
                <Setter Property="VerticalOptions" Value="Center"/>
                <Setter Property="HorizontalTextAlignment" Value="Center"/>
                <Setter Property="VerticalTextAlignment" Value="Center"/>
            </Style>

            <!-- Status Bar Styles -->
            <Style x:Key="StatusBarStyle" TargetType="Border">
                <Setter Property="BackgroundColor" Value="{DynamicResource CardBackgroundColor}"/>
                <Setter Property="Padding" Value="10,5"/>
                <Setter Property="Margin" Value="0,0,0,2"/>
                <Setter Property="StrokeThickness" Value="0"/>
                <Setter Property="Opacity" Value="0.9"/>
            </Style>
            <Style x:Key="StatusTextStyle" TargetType="Label">
                <Setter Property="TextColor" Value="{DynamicResource SecondaryTextColor}"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="VerticalOptions" Value="Center"/>
                <Setter Property="HorizontalOptions" Value="Start"/>
            </Style>
            <Style x:Key="StatusIconStyle" TargetType="Label">
                <Setter Property="FontFamily" Value="MaterialIcons"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="TextColor" Value="{DynamicResource SecondaryTextColor}"/>
                <Setter Property="VerticalOptions" Value="Center"/>
                <Setter Property="Margin" Value="0,0,5,0"/>
            </Style>

            <!-- Back Button Style -->
            <Style x:Key="BackButtonStyle" TargetType="Button">
                <Setter Property="FontFamily" Value="MaterialIcons"/>
                <Setter Property="FontSize" Value="24"/>
                <Setter Property="BackgroundColor" Value="Transparent"/>
                <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="HeightRequest" Value="40"/>
                <Setter Property="WidthRequest" Value="40"/>
                <Setter Property="HorizontalOptions" Value="Start"/>
                <Setter Property="VerticalOptions" Value="Center"/>
                <Setter Property="Margin" Value="5,0,0,0"/>
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>

    <Grid RowDefinitions="Auto, *, Auto, Auto" ColumnDefinitions="*" BackgroundColor="{DynamicResource PageBackgroundColor}">

        <!-- Chat Header - Fixed header similar to Telegram -->
        <Grid Grid.Row="0" Style="{StaticResource ChatHeaderStyle}" ColumnDefinitions="Auto,*,Auto">
            <Button Grid.Column="0" 
                    Text="arrow_back"
                    Command="{Binding GoBackCommand}"
                    Style="{StaticResource BackButtonStyle}"/>

            <VerticalStackLayout Grid.Column="1" Spacing="2" VerticalOptions="Center" HorizontalOptions="Center">
                <Label Text="{Binding CurrentChat.DisplayTitle}"
                       FontSize="16"
                       FontAttributes="Bold"
                       TextColor="{DynamicResource PrimaryTextColor}"
                       LineBreakMode="TailTruncation"
                       HorizontalOptions="Center"
                       HorizontalTextAlignment="Center"/>
                <Label TextColor="{DynamicResource SecondaryTextColor}" 
                       FontSize="12" 
                       HorizontalOptions="Center"
                       HorizontalTextAlignment="Center">
                    <Label.Triggers>
                        <DataTrigger TargetType="Label" 
                                    Binding="{Binding CurrentChat.OtherParticipant.IsOnline}" 
                                    Value="True">
                            <Setter Property="Text" Value="آنلاین"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Label" 
                                    Binding="{Binding CurrentChat.OtherParticipant.IsOnline}" 
                                    Value="False">
                            <Setter Property="Text" Value="{Binding CurrentChat.OtherParticipant.LastActiveText}"/>
                        </DataTrigger>
                    </Label.Triggers>
                </Label>
            </VerticalStackLayout>

            <!-- User Avatar -->
            <Border Grid.Column="2" 
                    WidthRequest="40" HeightRequest="40" 
                    BackgroundColor="{DynamicResource TertiaryColor}" 
                    StrokeShape="RoundRectangle 20" 
                    HorizontalOptions="End" 
                    Margin="0,0,10,0">
                <Label Text="{Binding CurrentChat.OtherParticipant.Initials}"
                       TextColor="{DynamicResource InverseTextColor}"
                       FontSize="16"
                       FontAttributes="Bold"
                       HorizontalOptions="Center"
                       VerticalOptions="Center"
                       HorizontalTextAlignment="Center"
                       VerticalTextAlignment="Center"/>
            </Border>
        </Grid>

        <!-- Chat Messages with Scroll Detection -->
        <RefreshView Grid.Row="1" IsRefreshing="{Binding IsLoadingMoreMessages}" Command="{Binding LoadMoreMessagesCommand}">
            <CollectionView x:Name="MessagesCollectionView"
                            ItemsSource="{Binding Messages}"
                            SelectionMode="None"
                            RemainingItemsThreshold="5"
                            RemainingItemsThresholdReached="OnRemainingItemsThresholdReached"
                            Margin="5"
                            ItemsUpdatingScrollMode="KeepLastItemInView">
                <CollectionView.EmptyView>
                    <Grid>
                        <Label Text="پیامی وجود ندارد" 
                               HorizontalOptions="Center" 
                               VerticalOptions="Center"
                               TextColor="{DynamicResource TertiaryTextColor}"
                               IsVisible="{Binding IsLoadingMessages, Converter={StaticResource InverseBoolConverter}}"/>
                    </Grid>
                </CollectionView.EmptyView>
                <CollectionView.ItemTemplate>
                    <DataTemplate x:DataType="model:MessageModel">
                        <!-- Use a Grid for the entire message row -->
                        <Grid Padding="8,4" ColumnSpacing="0">
                            <Grid.ColumnDefinitions>
                                <!-- Left column for received messages -->
                                <ColumnDefinition Width="*" />
                                <!-- Right column for sent messages -->
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!-- Received Message (left) -->
                            <Border Grid.Column="0" 
                                    BackgroundColor="{StaticResource ReceivedMessageBubbleColor}"
                                    Padding="12,8" 
                                    Margin="0,0,50,0"
                                    StrokeShape="RoundRectangle 15,15,15,5"
                                    IsVisible="{Binding IsOwnMessage, Converter={StaticResource InverseBoolConverter}}"
                                    HorizontalOptions="Start">
                                <Border.Shadow>
                                    <Shadow Brush="{DynamicResource ShadowColor}" 
                                            Offset="1,1" 
                                            Opacity="0.1" 
                                            Radius="3" />
                                </Border.Shadow>
                                <StackLayout Spacing="2">
                                    <Label Text="{Binding Content}"
                                           TextColor="{StaticResource ReceivedMessageTextColor}"
                                           FontSize="15"
                                           LineBreakMode="WordWrap" 
                                           FlowDirection="{Binding Content, Converter={StaticResource TextDirectionConverter}}"/>
                                    <Label Text="{Binding LocalSentAt, StringFormat='{0:HH:mm}'}"
                                           TextColor="{DynamicResource TertiaryTextColor}"
                                           Opacity="0.7"
                                           FontSize="11"
                                           HorizontalOptions="End" />
                                </StackLayout>
                            </Border>

                            <!-- Sent Message (right) -->
                            <Border Grid.Column="1" 
                                    BackgroundColor="{StaticResource SentMessageBubbleColor}"
                                    Padding="12,8" 
                                    Margin="50,0,0,0"
                                    StrokeShape="RoundRectangle 15,15,5,15"
                                    IsVisible="{Binding IsOwnMessage}"
                                    HorizontalOptions="End">
                                <Border.Shadow>
                                    <Shadow Brush="{DynamicResource ShadowColor}" 
                                            Offset="1,1" 
                                            Opacity="0.1" 
                                            Radius="3" />
                                </Border.Shadow>
                                <StackLayout Spacing="2">
                                    <Label Text="{Binding Content}"
                                           TextColor="{StaticResource SentMessageTextColor}"
                                           FontSize="15"
                                           LineBreakMode="WordWrap" 
                                           FlowDirection="{Binding Content, Converter={StaticResource TextDirectionConverter}}"/>
                                    <Grid ColumnDefinitions="Auto,Auto" ColumnSpacing="4" HorizontalOptions="End">
                                        <Label Grid.Column="0" 
                                               Text="{Binding LocalSentAt, StringFormat='{0:HH:mm}'}"
                                               TextColor="{StaticResource SentMessageTextColor}"
                                               Opacity="0.7"
                                               FontSize="11" />
                                        <Label Grid.Column="1" 
                                               Text="{Binding Status, Converter={StaticResource StatusIconConverter}}"
                                               TextColor="{StaticResource SentMessageTextColor}"
                                               Opacity="{Binding Status, Converter={StaticResource StatusOpacityConverter}}"
                                               FontFamily="MaterialIcons"
                                               FontSize="16"
                                               Margin="2,-2,0,0"
                                               VerticalOptions="End" />
                                    </Grid>
                                </StackLayout>
                            </Border>
                        </Grid>
                    </DataTemplate>
                </CollectionView.ItemTemplate>
            </CollectionView>
        </RefreshView>

        <!-- Loading indicator for messages -->
        <ActivityIndicator Grid.Row="1"
                           IsRunning="{Binding IsLoadingMessages}"
                           IsVisible="{Binding IsLoadingMessages}"
                           HorizontalOptions="Center" 
                           VerticalOptions="Center"
                           Color="{DynamicResource PrimaryColor}"/>

        <!-- Status Bar for typing -->
        <Border Grid.Row="2" Style="{StaticResource StatusBarStyle}"
                IsVisible="{Binding IsTyping}">
            <HorizontalStackLayout Spacing="5">
                <Label Text="keyboard" Style="{StaticResource StatusIconStyle}"/>
                <Label Text="{Binding TypingIndicatorText}" Style="{StaticResource StatusTextStyle}"/>
            </HorizontalStackLayout>
        </Border>

        <!-- Connection Status (visible when not connected) -->
        <Border Grid.Row="2" Style="{StaticResource StatusBarStyle}"
                IsVisible="{Binding IsConnected, Converter={StaticResource InverseBoolConverter}}">
            <HorizontalStackLayout Spacing="5">
                <Label Text="wifi_off" Style="{StaticResource StatusIconStyle}"/>
                <Label Text="اتصال به سرور پیام‌رسان برقرار نیست..." Style="{StaticResource StatusTextStyle}"/>
            </HorizontalStackLayout>
        </Border>

        <!-- Chat Input Area -->
        <Border Grid.Row="3" Style="{StaticResource ChatInputBorderStyle}" Margin="8">
            <Grid ColumnDefinitions="Auto,*,Auto,Auto" ColumnSpacing="5">
                <Button Grid.Column="0" Text="attach_file" Command="{Binding AttachFileCommand}" Style="{StaticResource ChatInputButtonStyle}"/>
                <Editor x:Name="MessageEditor" 
                        Grid.Column="1" 
                        Text="{Binding NewMessageText, Mode=TwoWay}" 
                        Style="{StaticResource ChatInputEditorStyle}" 
                        IsEnabled="{Binding IsSendingMessage, Converter={StaticResource InverseBoolConverter}}"
                        FlowDirection="{Binding NewMessageText, Converter={StaticResource TextDirectionConverter}}"/>
                <Button Grid.Column="2" Text="sentiment_satisfied" Command="{Binding EmojiCommand}" Style="{StaticResource ChatInputButtonStyle}"/>
                <Button Grid.Column="3" Command="{Binding SendMessageCommand}" Style="{StaticResource SendButtonStyle}">
                    <Button.ImageSource>
                        <FontImageSource FontFamily="MaterialIcons" Glyph="send" Color="{DynamicResource InverseTextColor}" Size="24"/>
                    </Button.ImageSource>
                    <Button.Triggers>
                        <DataTrigger TargetType="Button" Binding="{Binding NewMessageText.Length, Converter={StaticResource IntToBoolConverter}}" Value="False">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger TargetType="Button" Binding="{Binding IsSendingMessage}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
            </Grid>
        </Border>
    </Grid>
</ContentPage>