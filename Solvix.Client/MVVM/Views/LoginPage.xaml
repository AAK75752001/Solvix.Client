<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:vm="clr-namespace:Solvix.Client.MVVM.ViewModels"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:converters="clr-namespace:Solvix.Client.Core.Converters" x:Class="Solvix.Client.MVVM.Views.LoginPage"
             x:DataType="vm:LoginViewModel"
             Shell.NavBarIsVisible="False"
             BackgroundColor="{DynamicResource PageBackgroundColor}">

    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:AuthButtonTextConverter x:Key="AuthButtonTextConverter" />
            <converters:GreaterThanZeroConverter x:Key="GreaterThanZeroConverter"/>
            <toolkit:InvertedBoolConverter x:Key="InverseBoolConverter" />
            <toolkit:IsStringNotNullOrWhiteSpaceConverter x:Key="IsStringNotNullOrWhiteSpaceConverter"/>
            <Style x:Key="InputFrameStyle" TargetType="Frame">
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="0,5"/>
                <Setter Property="CornerRadius" Value="8"/>
                <Setter Property="BorderColor" Value="{DynamicResource FrameBorderColor}"/>
                <Setter Property="BackgroundColor" Value="{DynamicResource CardBackgroundColor}"/>
                <Setter Property="HasShadow" Value="False"/>
            </Style>
            <Style x:Key="InputFieldStyle" TargetType="Entry">
                <Setter Property="TextColor" Value="{DynamicResource PrimaryTextColor}"/>
                <Setter Property="PlaceholderColor" Value="{DynamicResource TertiaryTextColor}"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="HeightRequest" Value="50"/>
                <Setter Property="VerticalTextAlignment" Value="Center"/>
                <Setter Property="Margin" Value="15,0"/>
            </Style>
            <Style x:Key="ValidationLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="{DynamicResource ErrorColor}"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Margin" Value="10,0,0,5"/>
                <Setter Property="IsVisible" Value="{Binding Source={RelativeSource Self}, Path=Text, Converter={StaticResource IsStringNotNullOrWhiteSpaceConverter}}"/>
            </Style>
            <Style x:Key="PrimaryButtonStyle" TargetType="Button">
                <Setter Property="BackgroundColor" Value="{DynamicResource PrimaryColor}"/>
                <Setter Property="TextColor" Value="{DynamicResource InverseTextColor}"/>
                <Setter Property="CornerRadius" Value="25"/>
                <Setter Property="HeightRequest" Value="50"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontAttributes" Value="Bold"/>
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup Name="CommonStates">
                            <VisualState Name="Normal" />
                            <VisualState Name="Disabled">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="{DynamicResource TertiaryTextColor}"/>
                                    <Setter Property="TextColor" Value="{DynamicResource PageBackgroundColor}"/>
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
            <Style x:Key="TextButtonStyle" TargetType="Button">
                <Setter Property="TextColor" Value="{DynamicResource PrimaryColor}"/>
                <Setter Property="BackgroundColor" Value="Transparent"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="MinimumHeightRequest" Value="0"/>
            </Style>
            <Style x:Key="IconButtonStyle" BasedOn="{StaticResource TextButtonStyle}" TargetType="Button">
                <Setter Property="Padding" Value="10,0"/>
                <Setter Property="FontSize" Value="24"/>
                <Setter Property="FontFamily" Value="MaterialIcons"/>
                <Setter Property="TextColor" Value="{DynamicResource SecondaryTextColor}"/>
                <Setter Property="MinimumWidthRequest" Value="40"/>
                <Setter Property="VerticalOptions" Value="Center"/>
            </Style>
            <Style x:Key="ChangeNumberButtonStyle" BasedOn="{StaticResource TextButtonStyle}" TargetType="Button">
                <Setter Property="Padding" Value="0"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="TextColor" Value="{DynamicResource SecondaryTextColor}"/>
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>

    <ScrollView>
        <VerticalStackLayout Padding="30,0" Spacing="10" VerticalOptions="Center">

            <Image Source="logo.png" HeightRequest="80" HorizontalOptions="Center" Margin="0,0,0,30"/>

            <Label Text="Enter your phone number"
                   FontSize="24"
                   FontAttributes="Bold"
                   HorizontalTextAlignment="Center"
                   TextColor="{DynamicResource PrimaryTextColor}"/>

            <Label Text="We will send you a confirmation code"
                   FontSize="14"
                   HorizontalTextAlignment="Center"
                   TextColor="{DynamicResource SecondaryTextColor}"
                   Margin="0,0,0,20"/>

            <Frame Style="{StaticResource InputFrameStyle}">
                <Frame.Triggers>
                    <DataTrigger TargetType="Frame" Binding="{Binding Errors[PhoneNumber].Count, FallbackValue=0, Converter={StaticResource GreaterThanZeroConverter}}" Value="True">
                        <Setter Property="BorderColor" Value="{DynamicResource ErrorColor}"/>
                    </DataTrigger>
                </Frame.Triggers>
                <Entry x:Name="PhoneNumberEntry"
                       Placeholder="Phone Number (e.g., 0912...)"
                       Text="{Binding PhoneNumber, Mode=TwoWay}"
                       Keyboard="Telephone"
                       MaxLength="11"
                       IsEnabled="{Binding IsPhoneNumberLocked, Converter={StaticResource InverseBoolConverter}}"
                       Style="{StaticResource InputFieldStyle}"/>
            </Frame>
            <Label Style="{StaticResource ValidationLabelStyle}"
                   Text="{Binding Errors[PhoneNumber][0]}"/>

            <Button Text="Change number?"
                    Command="{Binding ChangePhoneNumberCommand}"
                    IsVisible="{Binding IsPhoneNumberLocked}"
                    HorizontalOptions="End"
                    Style="{StaticResource ChangeNumberButtonStyle}"
                    Margin="0,-5,0,10"/>

            <ActivityIndicator IsRunning="{Binding IsLoading}" IsVisible="{Binding IsLoading}" Color="{DynamicResource PrimaryColor}" Margin="0,10"/>

            <Frame Style="{StaticResource InputFrameStyle}"
                    IsVisible="{Binding ShowPasswordSection}">
                <Frame.Triggers>
                    <DataTrigger TargetType="Frame" Binding="{Binding Errors[Password].Count, FallbackValue=0, Converter={StaticResource GreaterThanZeroConverter}}" Value="True">
                        <Setter Property="BorderColor" Value="{DynamicResource ErrorColor}"/>
                    </DataTrigger>
                </Frame.Triggers>
                <Grid ColumnDefinitions="*, Auto">
                    <Entry Placeholder="Password"
                            Text="{Binding Password, Mode=TwoWay}"
                            IsPassword="{Binding IsPasswordVisible, Converter={StaticResource InverseBoolConverter}}"
                            Grid.Column="0"
                            Style="{StaticResource InputFieldStyle}"/>
                    <Button Grid.Column="1"
                              Command="{Binding TogglePasswordVisibilityCommand}"
                              Style="{StaticResource IconButtonStyle}">
                        <Button.Triggers>
                            <DataTrigger TargetType="Button"
                                           Binding="{Binding IsPasswordVisible}"
                                           Value="True">
                                <Setter Property="Text" Value="visibility_off" />
                            </DataTrigger>
                            <DataTrigger TargetType="Button"
                                           Binding="{Binding IsPasswordVisible}"
                                           Value="False">
                                <Setter Property="Text" Value="visibility" />
                            </DataTrigger>
                        </Button.Triggers>
                    </Button>
                </Grid>
            </Frame>
            <Label Style="{StaticResource ValidationLabelStyle}"
                    Text="{Binding Errors[Password][0]}"
                    IsVisible="{Binding ShowPasswordSection}"/>

            <VerticalStackLayout IsVisible="{Binding ShowRegistrationSection}" Spacing="10" Margin="0,10,0,0">
                <Label Text="Complete your profile"
                        FontSize="16"
                        FontAttributes="Bold"
                        HorizontalTextAlignment="Center"
                        TextColor="{DynamicResource PrimaryTextColor}" Margin="0,0,0,5"/>
                <Frame Style="{StaticResource InputFrameStyle}">
                    <Entry Placeholder="First Name (Optional)"
                             Text="{Binding FirstName, Mode=TwoWay}"
                             Style="{StaticResource InputFieldStyle}"/>
                </Frame>
                <Frame Style="{StaticResource InputFrameStyle}">
                    <Entry Placeholder="Last Name (Optional)"
                             Text="{Binding LastName, Mode=TwoWay}"
                             Style="{StaticResource InputFieldStyle}"/>
                </Frame>
            </VerticalStackLayout>

            <Button Text="{Binding CurrentState, Converter={StaticResource AuthButtonTextConverter}}"
                     Command="{Binding SubmitCommand}"
                     Style="{StaticResource PrimaryButtonStyle}"
                     Margin="0,20,0,0"/>

            <Button Text="Forgot Password?"
                     Command="{Binding ForgotPasswordCommand}"
                     IsVisible="{Binding ShowPasswordSection}"
                     HorizontalOptions="Center"
                     Style="{StaticResource TextButtonStyle}" Margin="0,10,0,0"/>

        </VerticalStackLayout>
    </ScrollView>
</ContentPage>